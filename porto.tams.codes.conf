server {
    listen 80;
    server_name porto.tams.codes;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name porto.tams.codes;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/porto.tams.codes/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/porto.tams.codes/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/porto.tams.codes/chain.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Document root
    root /root/work/porto-tamas/build;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Handle React Router (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security: deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Optional: Custom error pages
    error_page 404 /index.html;
}

# Upstream for port 8003 (if needed for API or other services)
upstream porto_backend {
    server 127.0.0.1:8003;
}

# Optional: Proxy configuration for backend API (disabled for now)
# Uncomment when api.porto.tams.codes DNS is ready
# server {
#     listen 443 ssl http2;
#     server_name api.porto.tams.codes;
#
#     # Use the same SSL certificates
#     ssl_certificate /etc/letsencrypt/live/porto.tams.codes/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/porto.tams.codes/privkey.pem;
#
#     # Proxy to backend running on port 8003
#     location / {
#         proxy_pass http://porto_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

